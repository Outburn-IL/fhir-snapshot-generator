// Placeholder for the actual getSnapshot that will be part of this package and use cache
// Currently all requests are passed to fhir-package-explorer and no cache is used
// Also all snapshots returned are the ones that exist in original package and not the ones generated by us

import { FhirPackageExplorer, LookupFilter } from 'fhir-package-explorer';
import { ElementDefinition } from './types';

export const getSnapshotElements = async (fpe: FhirPackageExplorer, idOrUrl: string, pkg?: string): Promise<ElementDefinition[]> => {
  const logger = fpe.getLogger();
  logger.info(`Fetching snapshot elements for: ${idOrUrl}`);
  // if the string starts with 'http[s]:', it is a url, otherwise it is an id
  const isUrl = idOrUrl.startsWith('http:') || idOrUrl.startsWith('https:');
  const filter: LookupFilter = { [isUrl ? 'url' : 'id']: idOrUrl };
  if (pkg) {
    filter.package = pkg;
  }
  const snapshot = await fpe.resolve({ resourceType: 'StructureDefinition', ...filter });
  return snapshot.snapshot.element;
};